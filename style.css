body{
    font-family: 'Montserrat', sans-serif;
}

header{
    background-color: #BBBBBB;
    padding: 20px 0;
}

.caja{
    width: 940px;
    position: relative;
    margin: 0 auto;
}

nav{
    position: absolute; /* Para cambiar la posición del punto inicial donde se encuentra el elemento.*/
    top: 110px;
    right: 0;
}

nav li{
    display: inline;
    margin: 0 0 0 15px;
}

nav a{
    text-transform: uppercase;
    color: #000000;
    font-weight: bold;
    font-size: 22px;
    text-decoration: none;
}

nav a:hover {
    color: #c78c19;
    text-decoration: underline;
}

.productos{
    width: 940px;
    margin: 0 auto;
    padding: 50px;
}

.productos li{
    display: inline-block;
    text-align: center;
    width: 30%;
    vertical-align: top;
    margin: 0 1.5%;
    padding: 30px 20px; /* El elemento aumenta su tamaño. */
    box-sizing: border-box;
    /* 
    border-color: #000000;
    border-width: 2px;
    border-style: solid;
    */
    border: 2px solid #000000; /* Un borde sólido, con 3 pixeles de ancho, entre el padding y el margin. */
    border-radius: 10px;
}

.productos li:hover{ /* efecto cuando paso el mouse por arriba */
    border-color: #c78c19;
}

.productos li:active{ /* efecto cuando click */
    border-color: #088c19;
}

.productos h2{
    font-size: 30px;
    font-weight: bold;
}

.productos li:hover h2{
    font-size: 33px;
}

.productos-descripcion{
    font-size: 18px;
}

.productos-precio{
    font-size: 20px;
    font-weight: bold;
    margin-top: 10px;
}

footer{
    text-align: center;
    background: url(imagenes/bg.jpg);
    padding: 40px;
    
}

.copyright{
    color: #FFFFFF;
    font-size: 13px;
    margin: 20px;
}

form{
    margin: 40px 0;

    /* modificaciones mias*/
    width: 60%;
    margin: auto;
    margin-top: 20px;
}

form label, form legend{
    display: block;
    font-size: 20px;
    margin: 0 0 10px;

    width: 100%;
}

.input-padron{
    display: block;
    margin: 0 0 20px;
    padding: 10px 25px;
    
    width: 100%;
}

select{
    width: 50%;
    height: 40px;
    font-size: 20px;
    text-align: center;
}

.checkbox{
    margin: 20px 0; /* 20 arriba y abajo, para los lados 0*/
}

/*¿Cuál es el mejor enfoque cuando tenemos una configuración de CSS aplicada a un ítem y queremos replicarla en un ítem similar?
 - Cuando tenemos un estilo que puede ser repetido, una buena estrategia es extraer eso a una clase y usar la clase para aplicar esos estilos en nuestros elementos.
 - Usar selectores de ítems separados por coma, Esta es una forma sencilla de hacer que la misma configuración de CSS funcione para los dos ítems, ya sean selectores de elementos, de ids o de clases.
 */

 .enviar{
    width: 40%;
    padding: 15px 0;
    font-size: 18px;
    font-weight: bold;
    color: white;
    background: orange;
    border: none;
    border-radius: 5px;
    transition: 1s all; /*configurar la transición visual de un elemento*/
    cursor: pointer;
 }

 .enviar:hover{
    background: darkorange;
    transform: scale(1.2); /*rotate(360deg);   con esto agranda su tamaño y gira */
 }

 table{
    width: 60%;
        
    margin: auto;
    margin-top: 20px;
    margin-bottom: 20px;
    
}

 thead{
    background: #555555;
    color: white;
    font-weight: bold;
 }

 td, th{
    border: 1px solid #000000;
    padding: 8px 15px;
 }

 /* CSS para el home */
.principal p:not(#mision){ /* aplico orange a todos los parrafos menos al que tenga id mision */
    /*background: orange; */
}

main > p{ /* selecciono solo los parrafos que son hijos directos de main */
   /* background: red; */
}

img + p{  /* selecciono el parrafo que viene despues de la imagen */
    /* background: yellow; */
}

img ~ p{  /* selecciono todos los parrafo que vienen despues de la imagen */
    /* background: green;*/
}

 .banner{
    width: 100%;
 }

.principal{
    padding: 3em 0;
    background: #FEFEFE;
    width: 940px;
    margin: 0 auto;
 }

 .titulo-principal{
    text-align: center;
    font-size: 2em; /* que se 2 veces el tamaño padron de la fuente del navegador*/
    margin: 0 0 1em;
    clear: left;
    /* color: rgba(0, 0, 0, 0.3);*/  /* 0.3 es la opacidad para el texto*/
    /*
    ¿Cuáles tipos de elementos pueden recibir una capa de opacidad?
    Todos los elementos y todos los colores Todos los elementos y 
    todos los colores pueden tener una capa de opacidad.
    */
    /* text-shadow: 2px 2px 10px red; */
}

.titulo-principal::first-letter{ /* pseudoelemento, pinto la primer letra del titulo en negrita */
    /* font-weight: bold; */
}

/* before y after quita la aplicacion de la primer letra en negro */
/*
    ¿Cómo creo un pseudo-elemento usando CSS que anteceda a un elemento de HTML?
    Con la propiedad :before
    Cuando queremos crear un elemento en la pagina, via CSS, antes del elemento
    de HTML, usamos la propiedad :before.
*/
.titulo-principal::before{ /* pseudoelemento, colocar un corchete antes del titulo */
    /*content: "[";
    color: #c78c19;*/
}

.titulo-principal::after{ /* pseudoelemento, colocar un corchete despues del titulo */
   /* content: "]";*/
}

p::first-line{ /* al primer renglor le pongo formato de italia */
    /* font-style: italic; */
}


.principal p{
    margin: 0 0 1em;
}

.principal strong{
    font-weight: bold;
}

.principal em{
    font-style: italic;
}

.utensillios{
    width: 120px;
    /* calculo en css para ajutar segun el dispositivo, hacer responsive creo */
    /*width: calc(40% - (26px * 4));*/
    /*
    ¿Cómo usar medidas proporcionales para dejar un elemento 100% de ancho con 
    el equivalente a un tercio del elemento padre, menos 10px?

    width: calc( (100% / 3) - 10px )
    Es necesario calcular el un tercio del elemento, esa es una 
    de las formas de hacer eso, luego le restamos los 10px.

    */


    /* width: 100%; */
    float: left;
    /* ¿Para qué sirve la propiedad float?
    Colocar el elemento en la lateral de nuestra página y dejar los 
    otros elementos alrededor de él.
    Tanto el float:left como el float: right sirven para que 
    el elemento se destaque en la pantalla, la superficie 
    del elemento continúa siendo utilizada y los otros elementos 
    de texto o elementos en línea se posicionan alrededor de él.
    */


    margin: 0 20px 20px 0;
}

.mapa{
    padding:  3em 0;
    background: linear-gradient(#FEFEFE, #888888);

    /*
    background: linear-gradient(90deg, orange 50%, blue, red, black);
    background: radial-gradient(90deg, orange 50%, blue, red, black);

    ¿Cómo hacer un degradado de 5 colores en un elemento?
    Usamos dentro del mismo paréntesis, separando los colores con comas.
    background: linear-gradient(gray, yellow, red, orange, blue)
    */
}

.mapa p{
    margin: 0 0 2em;
    text-align: center;
}

.mapa-contenido{
    width: 940px;
    margin: 0 auto;
}

.diferenciales{
    padding: 3em 0;
    background: #888888;
    /* box-shadow: inset 0 0 30px red; */
    /* sombras internas 
    ¿Cómo hacer una sombra interna en un elemento?
    box-shadow: inset 0 0 5px black;
    Sombra interna, negra, con una extensión de 5px.    
    */

}

.contenido-diferenciales{
    width: 640px;
    margin: 0 auto;
}

.lista-diferenciales{
    width: 40%;
    display: inline-block;
    vertical-align: top;
}

.items{
    line-height: 1.5; /* parecido al 1em */
}

.items::before{

    content: "★";
}

.items:first-child{ /*esto es pseudoclase, primer item de la lista en negro */
    font-weight: bold;
}

.imagen-diferenciales{
    width: 60%;
    transition: 400ms;
    box-shadow: 10px 10px 30px 15px #000000;
    /*  ubicacion de la sobre en el eje horizontal, 
        eje vertical, 
        difumasion de solido a transparente, 
        spread expancion, 
        color de la sombra 
    */
   
    /*  box-shadow: 10px 10px 30px 15px #000000, 
                10px 10px yellow, 
                -15px 10px rgba(50, 50, 50, 0.5);*/
    /* se puede agregar varias sombras separadas por coma*/
    
}

.imagen-diferenciales:hover{
    opacity: 0.30; /* 30% */
}

/* Al crear cualquier estilo, ¿Cuál es el mejor padrón para 
    marcar nuestro contenido al crear una clase?
    Ser específico y genérico al mismo tiempo
¡Alternativa correcta! Un balance es la mejor alternativa. 
No tan específico, para poder repetir o reutilizar las clases 
y no tan genérico, para que no tengas que necesitar combinar clases.
*/

.video{
    width: 560px;
    margin: 1em auto;
}

/* 
    aplico responsive (basicamente) 
    media queries
*/
@media screen and (max-width: 940px){
    /*
    body{
        background: red;
    }
    */

    h1{
        text-align: center;
    }

    nav{
        position: static;
    }

    .caja, .principal, .mapa-contenido, .contenido-diferenciales, .video{
        width: auto;
    }

    .principal, .mapa p{
        padding: 10px 10px;
    }

    .lista-diferenciales, .imagen-diferenciales{
        width: 100%;
        margin: 10px 0px;
    }

    .contenido-diferenciales ul{
        padding: 10px 10px;
        display: block;
        width: 50%;
        font-size: 20px;
        margin: auto;
    }

    .contenido-diferenciales{
        padding: 10px 10px;
    }

    .video{
        padding: 0px 10px;
    }

    .productos{
        width: auto;
        display: block;
    }

    .productos li{
        width: 100%;
        margin: 10px 0px;
    }

    form{
        width: 80%;
        margin: auto;
        padding: 20px 0px;
    }

    form .input-padron{
        width: 90%;
    }

    .enviar{
        width: 100%;
    }

    table{
        width: 80%;
        
        
        margin: auto;
        margin-bottom: 10px;
    }

}

/*
¿Cómo marcar un elemento para que se presente de 
otra manera a través de una condición, en una pantalla de hasta 480px?

@media (max-width: 480px) {}
Dentro de esta media query podemos crear un estilo visual que incluye 
pantallas de hasta 480px.


¿Cuál es la principal táctica para no perder mucho tiempo creando layouts responsivos?
    Usar medidas proporcionales para todo, Hoy en día es la mejor 
    forma de crear cualquier contenido.

    Crear un layout fluido que se adapte siempre,
    Es una manera perfecta de evitar la repetición de trabajos.
*/




